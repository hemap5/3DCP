{"ast":null,"code":"var _jsxFileName = \"/Users/hema/3dcp/src/components/UploadHouseForm.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst UploadHouseForm = () => {\n  _s();\n  const [formData, setFormData] = useState({\n    structureId: '',\n    structureType: 'house',\n    userId: '',\n    images: [],\n    tags: '',\n    files: []\n  });\n  const [error, setError] = useState(null);\n  const [emptyFields, setEmptyFields] = useState([]);\n  const handleChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setFormData({\n      ...formData,\n      [name]: value\n    });\n  };\n  const handleImageChange = e => {\n    const files = Array.from(e.target.files);\n    setFormData({\n      ...formData,\n      images: files\n    });\n  };\n  const handleFileChange = e => {\n    const files = Array.from(e.target.files);\n    const allowedExtensions = ['.pdf', '.obj', '.stl'];\n    const validFiles = files.filter(file => {\n      const extension = file.name.split('.').pop();\n      return allowedExtensions.includes(`.${extension.toLowerCase()}`);\n    });\n    if (validFiles.length !== files.length) {\n      setError('Please upload files with .pdf, .obj, or .stl extensions only.');\n    } else {\n      setFormData({\n        ...formData,\n        files: validFiles\n      });\n      setError(null);\n    }\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    const {\n      structureId,\n      userId,\n      images,\n      tags,\n      files\n    } = formData;\n    if (!structureId || !userId || images.length === 0 || !files.length) {\n      setError('Please fill in all required fields.');\n      setEmptyFields(['structureId', 'userId', 'images', 'files']);\n      return;\n    }\n\n    // Handle form submission, e.g., send formData to backend\n    console.log(formData);\n\n    // Clear form data after submission if needed\n    setFormData({\n      structureId: '',\n      structureType: 'house',\n      userId: '',\n      images: [],\n      tags: '',\n      files: []\n    });\n    setError(null);\n    setEmptyFields([]);\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    className: \"create\",\n    onSubmit: handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Upload House Model\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: \"structureId\",\n      children: \"Structure ID\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"number\",\n      id: \"structureId\",\n      name: \"structureId\",\n      value: formData.structureId,\n      onChange: handleChange,\n      className: emptyFields.includes('structureId') ? 'error' : ''\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: \"userId\",\n      children: \"User ID\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"number\",\n      id: \"userId\",\n      name: \"userId\",\n      value: formData.userId,\n      onChange: handleChange,\n      className: emptyFields.includes('userId') ? 'error' : ''\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: \"images\",\n      children: \"Images\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"file\",\n      id: \"images\",\n      name: \"images\",\n      onChange: handleImageChange,\n      multiple: true,\n      accept: \"image/*\",\n      className: emptyFields.includes('images') ? 'error' : ''\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: \"tags\",\n      children: \"Tags\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      id: \"tags\",\n      name: \"tags\",\n      value: formData.tags,\n      onChange: handleChange,\n      className: emptyFields.includes('tags') ? 'error' : ''\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: \"files\",\n      children: \"Files (List of files):\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"file\",\n      id: \"files\",\n      name: \"files\",\n      onChange: handleFileChange,\n      multiple: true,\n      className: emptyFields.includes('files') ? 'error' : ''\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      children: \"Submit\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"error\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 80,\n    columnNumber: 5\n  }, this);\n};\n_s(UploadHouseForm, \"PdUMYeVyTd4eJPhsGjOlsoZ6v4w=\");\n_c = UploadHouseForm;\nexport default UploadHouseForm;\nvar _c;\n$RefreshReg$(_c, \"UploadHouseForm\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","UploadHouseForm","_s","formData","setFormData","structureId","structureType","userId","images","tags","files","error","setError","emptyFields","setEmptyFields","handleChange","e","name","value","target","handleImageChange","Array","from","handleFileChange","allowedExtensions","validFiles","filter","file","extension","split","pop","includes","toLowerCase","length","handleSubmit","preventDefault","console","log","className","onSubmit","children","fileName","_jsxFileName","lineNumber","columnNumber","htmlFor","type","id","onChange","multiple","accept","_c","$RefreshReg$"],"sources":["/Users/hema/3dcp/src/components/UploadHouseForm.js"],"sourcesContent":["import React, { useState } from 'react';\n\nconst UploadHouseForm = () => {\n  const [formData, setFormData] = useState({\n    structureId: '',\n    structureType: 'house',\n    userId: '',\n    images: [],\n    tags: '',\n    files: []\n  });\n\n  const [error, setError] = useState(null);\n  const [emptyFields, setEmptyFields] = useState([]);\n\n  const handleChange = (e) => {\n    const { name, value } = e.target;\n    setFormData({\n      ...formData,\n      [name]: value\n    });\n  };\n\n  const handleImageChange = (e) => {\n    const files = Array.from(e.target.files);\n    setFormData({\n      ...formData,\n      images: files\n    });\n  };\n\n  const handleFileChange = (e) => {\n    const files = Array.from(e.target.files);\n    const allowedExtensions = ['.pdf', '.obj', '.stl'];\n    const validFiles = files.filter(file => {\n      const extension = file.name.split('.').pop();\n      return allowedExtensions.includes(`.${extension.toLowerCase()}`);\n    });\n\n    if (validFiles.length !== files.length) {\n      setError('Please upload files with .pdf, .obj, or .stl extensions only.');\n    } else {\n      setFormData({\n        ...formData,\n        files: validFiles\n      });\n      setError(null);\n    }\n  };\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n\n    const { structureId, userId, images, tags, files } = formData;\n\n    if (!structureId || !userId || images.length === 0 || !files.length) {\n      setError('Please fill in all required fields.');\n      setEmptyFields(['structureId', 'userId', 'images', 'files']);\n      return;\n    }\n\n    // Handle form submission, e.g., send formData to backend\n    console.log(formData);\n\n    // Clear form data after submission if needed\n    setFormData({\n      structureId: '',\n      structureType: 'house',\n      userId: '',\n      images: [],\n      tags: '',\n      files: []\n    });\n\n    setError(null);\n    setEmptyFields([]);\n  };\n\n  return (\n    <form className=\"create\" onSubmit={handleSubmit}> \n      <h3>Upload House Model</h3>\n\n      <label htmlFor=\"structureId\">Structure ID</label>\n      <input \n        type=\"number\" \n        id=\"structureId\" \n        name=\"structureId\" \n        value={formData.structureId} \n        onChange={handleChange} \n        className={emptyFields.includes('structureId') ? 'error' : ''}\n      />\n\n      <label htmlFor=\"userId\">User ID</label>\n      <input \n        type=\"number\" \n        id=\"userId\" \n        name=\"userId\" \n        value={formData.userId} \n        onChange={handleChange} \n        className={emptyFields.includes('userId') ? 'error' : ''}\n      />\n\n      <label htmlFor=\"images\">Images</label>\n      <input \n        type=\"file\" \n        id=\"images\" \n        name=\"images\" \n        onChange={handleImageChange} \n        multiple \n        accept=\"image/*\" \n        className={emptyFields.includes('images') ? 'error' : ''}\n      />\n\n      <label htmlFor=\"tags\">Tags</label>\n      <input \n        type=\"text\" \n        id=\"tags\" \n        name=\"tags\" \n        value={formData.tags} \n        onChange={handleChange} \n        className={emptyFields.includes('tags') ? 'error' : ''}\n      />\n\n      <label htmlFor=\"files\">Files (List of files):</label>\n      <input \n        type=\"file\" \n        id=\"files\" \n        name=\"files\" \n        onChange={handleFileChange} \n        multiple \n        className={emptyFields.includes('files') ? 'error' : ''}\n      />\n\n      <button type=\"submit\">Submit</button>\n      {error && <div className=\"error\">{error}</div>}\n    </form>\n  );\n};\n\nexport default UploadHouseForm;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}